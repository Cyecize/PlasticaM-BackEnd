<?php

namespace App\Repository;

use App\BindingModel\ProductQuery;
use App\Utils\Page;


/**
 * ProductRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends \Doctrine\ORM\EntityRepository
{

    public function search(ProductQuery $productQuery): Page
    {
        $qb = $this->createQueryBuilder('p');

        $qb->where('p.enabled = TRUE');

        if ($productQuery->getCategoryIds() != null && count($productQuery->getCategoryIds()) > 0) {
            $qb->andWhere($qb->expr()->in('p.categoryId', ':categories'));
            $qb->setParameter('categories', $productQuery->getCategoryIds());
        }

        if ($productQuery->getSearch() != null && trim($productQuery->getSearch()) !== '') {
            $qb->andWhere($qb->expr()->orX(
                $qb->expr()->like('p.name', ':search'),
                $qb->expr()->like('p.descriptionBg', ':search'),
                $qb->expr()->like('p.descriptionEn', ':search')
            ));

            $qb->setParameter('search', '%' . preg_replace('/\s+/', '%', $productQuery->getSearch() . '%'));
        }

        if ($productQuery->getSort() != null) {
            $qb->orderBy('p.' . $productQuery->getSort()->getField(), strtoupper($productQuery->getSort()->getDirection()));
        }

        return new Page($qb, $productQuery->getPage());
    }
}
